// <auto-generated />
using System;
using APIPointeuse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIPointeuse.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230511133518_UpdateModels")]
    partial class UpdateModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIPointeuse.Models.ArrivalDateTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdStudent");

                    b.ToTable("ArrivalDateTime");
                });

            modelBuilder.Entity("APIPointeuse.Models.Cycles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("APIPointeuse.Models.Periods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginningPeriod")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndingPeriod")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSchoolclass")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdSchoolclass");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("APIPointeuse.Models.Schoolclasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCycle")
                        .HasColumnType("int");

                    b.Property<int>("IdSection")
                        .HasColumnType("int");

                    b.Property<int>("IdSubsection")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCycle");

                    b.HasIndex("IdSection");

                    b.HasIndex("IdSubsection");

                    b.ToTable("Schoolclasses");
                });

            modelBuilder.Entity("APIPointeuse.Models.Sections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("APIPointeuse.Models.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("IdSchoolclass")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSchoolclass");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("APIPointeuse.Models.StudentsDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentsDevice");
                });

            modelBuilder.Entity("APIPointeuse.Models.Subsections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Subsections");
                });

            modelBuilder.Entity("APIPointeuse.Models.ArrivalDateTime", b =>
                {
                    b.HasOne("APIPointeuse.Models.Students", "Students")
                        .WithMany("ArrivalDateTime")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("APIPointeuse.Models.Periods", b =>
                {
                    b.HasOne("APIPointeuse.Models.Schoolclasses", "Schoolclasses")
                        .WithMany("Periods")
                        .HasForeignKey("IdSchoolclass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schoolclasses");
                });

            modelBuilder.Entity("APIPointeuse.Models.Schoolclasses", b =>
                {
                    b.HasOne("APIPointeuse.Models.Cycles", "Cycles")
                        .WithMany()
                        .HasForeignKey("IdCycle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPointeuse.Models.Sections", "Sections")
                        .WithMany()
                        .HasForeignKey("IdSection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPointeuse.Models.Subsections", "Subsections")
                        .WithMany()
                        .HasForeignKey("IdSubsection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cycles");

                    b.Navigation("Sections");

                    b.Navigation("Subsections");
                });

            modelBuilder.Entity("APIPointeuse.Models.Students", b =>
                {
                    b.HasOne("APIPointeuse.Models.Schoolclasses", "Schoolclasses")
                        .WithMany("Students")
                        .HasForeignKey("IdSchoolclass");

                    b.Navigation("Schoolclasses");
                });

            modelBuilder.Entity("APIPointeuse.Models.StudentsDevice", b =>
                {
                    b.HasOne("APIPointeuse.Models.Students", "Students")
                        .WithMany()
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("APIPointeuse.Models.Schoolclasses", b =>
                {
                    b.Navigation("Periods");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("APIPointeuse.Models.Students", b =>
                {
                    b.Navigation("ArrivalDateTime");
                });
#pragma warning restore 612, 618
        }
    }
}
